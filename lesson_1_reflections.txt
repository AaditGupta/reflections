How did viewing a diff between two different versions of a file help you see the bug that was introduced?
  Well, I guess it just showed the differences between the two files. That's a start, no?

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
    You wouldn't have to worry about newly created bugs, because you can retrace your steps using version control. Using the example of Skyrim mods, and how prone they
    are to catastrophic failure, I think version control would be very useful to any programmer.

What do you think are the pros and cons of manually choosing when to commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
  You can commit files at logical intervals and at goldilocks times.

Why do you think some version control systems, like Git, allow saving muliple files in one commit, while others, like Google Docs, treat each file separately?
  Because Git is specifically designed for version control to do with pieces of software. Generally, files containing separate but interlinked code need each other
  to work correctly, so it makes sense that they be saved together.

How can you use the commands git log and git diff to view the history of files?
  By using git log to find the IDs of the two commits you're looking for, and using Git Diff to actually compare the two and find differences.

How might using version control make you more confident to make changes that could break something?
  You have peace of mind that you can just roll back to a working version of your repository/code.

Now that you have your workspace set up, what do you want to try using Git for?
  Getting sh*t done! ;)

  
